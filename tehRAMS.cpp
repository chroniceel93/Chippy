#include "tehRAMS.h"
#include <cstring>
#include <stdexcept>
#include <iostream>

bool tehRAMS::validate_memory_access(int addr) {
    return (addr >= 0 && addr < size) ? true : false;
}

tehRAMS::tehRAMS(size_t s) : size(s) {
    memory = new unsigned char[size];
    tehRAMS::clear_tehRAMS();
}

tehRAMS::~tehRAMS() {
    delete[] memory;
}

void tehRAMS::clear_tehRAMS() {
    unsigned char data[80] = {
        0xF0, 0x90, 0x90, 0x90, 0xF0, // HEX ZERO  - (0x000-0x004)
        0x20, 0x60, 0x20, 0x20, 0x70, // HEX ONE   - (0x005-0x009)
        0xF0, 0x10, 0xF0, 0x80, 0xF0, // HEX TWO   - (0x00A-0x00E)
        0xF0, 0x10, 0xF0, 0x10, 0xF0, // HEX THREE - (0x00F-0x013)
        0x90, 0x90, 0xF0, 0x10, 0x10, // HEX FOUR  - (0x014-0x018)
        0xF0, 0x80, 0xF0, 0x10, 0xF0, // HEX FIVE  - (0x019-0x01D)
        0xF0, 0x80, 0xF0, 0x90, 0xF0, // HEX SIX   - (0x01E-0x022)
        0xF0, 0x10, 0x20, 0x40, 0x40, // HEX SEVEN - (0x023-0x027)
        0xF0, 0x90, 0xF0, 0x90, 0xF0, // HEX EIGHT - (0x028-0x02C)
        0xF0, 0x90, 0xF0, 0x10, 0xF0, // HEX NINE  - (0x02D-0x031)
        0xF0, 0x90, 0xF0, 0x90, 0x90, // HEX A     - (0x032-0x036)
        0xE0, 0x90, 0xE0, 0x90, 0xE0, // HEX B     - (0x037-0x03B)
        0xF0, 0x80, 0x80, 0x80, 0xF0, // HEX C     - (0x03C-0x040)
        0xE0, 0x90, 0x90, 0x90, 0xE0, // HEX D     - (0x041-0x045)
        0xF0, 0x80, 0xF0, 0x80, 0xF0, // HEX E     - (0x046-0x04A)
        0xF0, 0x80, 0xF0, 0x80, 0x80  // HEX F     - (0x04B-0x04F)
    };
    for (int i = 0; i < 80; i++) {
        tehRAMS::write_ram(i, data[i]);
    }
    for (int i = 0x200; i < size; i++) {
        tehRAMS::write_ram(i, 0);
    }
}

unsigned char tehRAMS::read_ram(int addr) {
    return tehRAMS::validate_memory_access(addr) ? memory[addr] : 255;
}

bool tehRAMS::write_ram(int addr, unsigned char val) {
    bool fail = false;
    if (tehRAMS::validate_memory_access(addr)) {
        this->memory[addr] = val;
    } else {
        fail = true;
    }
    return fail;
}